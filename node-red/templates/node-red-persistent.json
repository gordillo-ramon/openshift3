{
	"kind": "Template",
	"apiVersion": "v1",
	"metadata": {
		"name": "node-red-persistent",
		"annotations": {
			"description": "Node-red with persistence for mockups",
			"iconClass": "icon-equalizer",
			"tags": "node-red"
		}
	},
	"parameters": [
		{
			"name": "APPLICATION_NAME",
			"description": "Application Name",
			"value": "node-red"
		},
		{
			"name": "TZ",
			"description": "Timezone",
			"value": "CET"
		}
	],
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "Route",
			"metadata": {
				"name": "${APPLICATION_NAME}",
				"labels": {
					"app": "${APPLICATION_NAME}"
				},
				"annotations": {
					
				}
			},
			"spec": {
				"host": null,
				"to": {
					"kind": "Service",
					"name": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"name": "${APPLICATION_NAME}",
				"labels": {
					"app": "${APPLICATION_NAME}"
				},
				"annotations": {
					
				}
			},
			"spec": {
				"ports": [
					{
						"name": "1880-tcp",
						"protocol": "TCP",
						"port": 1880,
						"targetPort": 1880
					}
				],
				"selector": {
					"deploymentconfig": "${APPLICATION_NAME}"
				},
				"type": "ClusterIP",
				"sessionAffinity": "None"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "ImageStream",
			"metadata": {
				"name": "${APPLICATION_NAME}",
				"labels": {
					"app": "${APPLICATION_NAME}"
				},
				"annotations": {
					
				}
			},
			"spec": {
				"dockerImageRepository": "nodered/node-red-docker",
				"tags": [
					{
						"name": "0.14.6-slim",
						"from": {
							"kind": "DockerImage",
							"name": "nodered/node-red-docker:0.14.6-slim"
						},
						"generation": 2,
						"importPolicy": {
							
						}
					},
					{
						"name": "latest",
						"from": {
							"kind": "DockerImage",
							"name": "nodered/node-red-docker:latest"
						},
						"generation": 2,
						"importPolicy": {
							
						}
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"name": "${APPLICATION_NAME}",
				"labels": {
					"app": "${APPLICATION_NAME}",
					"deploymentconfig": "${APPLICATION_NAME}"
				},
				"annotations": {
					
				}
			},
			"spec": {
				"strategy": {
					"type": "Rolling",
					"rollingParams": {
						"updatePeriodSeconds": 1,
						"intervalSeconds": 1,
						"timeoutSeconds": 600,
						"maxUnavailable": "25%",
						"maxSurge": "25%"
					},
					"resources": {
						
					}
				},
				"triggers": [
					{
						"type": "ConfigChange"
					},
					{
						"type": "ImageChange",
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"node-red"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${APPLICATION_NAME}:0.14.6-slim"
							}
						}
					}
				],
				"replicas": 1,
				"test": false,
				"selector": {
					"deploymentconfig": "${APPLICATION_NAME}"
				},
				"template": {
					"metadata": {
						"labels": {
							"app": "${APPLICATION_NAME}",
							"deploymentconfig": "${APPLICATION_NAME}"
						}
					},
					"spec": {
						"volumes": [
							{
								"name": "${APPLICATION_NAME}-data",
								"persistentVolumeClaim": {
									"claimName": "${APPLICATION_NAME}-data"
								}
							}
						],
						"containers": [
							{
								"name": "node-red",
								"image": "${APPLICATION_NAME}:0.14.6-slim",
								"ports": [
									{
										"name": "1880-tcp",
										"containerPort": 1880,
										"protocol": "TCP"
									}
								],
								"resources": {
									
								},
								"volumeMounts": [
									{
										"name": "${APPLICATION_NAME}-data",
										"mountPath": "/data"
									}
								],
								"terminationMessagePath": "/dev/termination-log",
								"imagePullPolicy": "Always"
							}
						],
						"restartPolicy": "Always",
						"terminationGracePeriodSeconds": 30,
						"dnsPolicy": "ClusterFirst",
						"securityContext": {
							
						}
					}
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "PersistentVolumeClaim",
			"metadata": {
				"name": "${APPLICATION_NAME}-data"
			},
			"spec": {
				"accessModes": [
					"ReadWriteOnce"
				],
				"resources": {
					"requests": {
						"storage": "100Mi"
					}
				}
			}
		}
	]
}